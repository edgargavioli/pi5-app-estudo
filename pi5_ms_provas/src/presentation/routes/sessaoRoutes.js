import { Router } from 'express';
import { SessaoEstudoController } from '../controllers/SessaoEstudoController.js';

const router = Router();
const sessaoController = new SessaoEstudoController();

// Listar todas as sess√µes de estudo
router.get('/', async (req, res) => {
    /*
    #swagger.tags = ['Sess√µes de Estudo']
    #swagger.summary = 'Listar todas as sess√µes de estudo'
    #swagger.description = 'Retorna uma lista com todas as sess√µes de estudo cadastradas incluindo links HATEOAS'
    #swagger.responses[200] = {
        description: 'Lista de sess√µes retornada com sucesso',
        schema: { 
            type: 'object',
            properties: {
                data: {
                    type: 'array',
                    items: { $ref: '#/components/schemas/SessaoEstudo' }
                },
                _links: {
                    type: 'object',
                    properties: {
                        self: { type: 'object' },
                        create: { type: 'object' }
                    }
                }
            }
        }
    }
    #swagger.responses[500] = {
        description: 'Erro interno do servidor',
        schema: { $ref: '#/components/schemas/Error' }
    }
    */
    await sessaoController.getAll(req, res);
});

// Buscar uma sess√£o de estudo espec√≠fica
router.get('/:id', async (req, res) => {
    /*
    #swagger.tags = ['Sess√µes de Estudo']
    #swagger.summary = 'Buscar sess√£o por ID'
    #swagger.description = 'Retorna uma sess√£o de estudo espec√≠fica pelo seu ID incluindo links HATEOAS'
    #swagger.parameters['id'] = {
        in: 'path',
        description: 'ID da sess√£o de estudo',
        required: true,
        type: 'string',
        format: 'uuid'
    }
    #swagger.responses[200] = {
        description: 'Sess√£o encontrada',
        schema: { 
            type: 'object',
            properties: {
                data: { $ref: '#/components/schemas/SessaoEstudo' },
                _links: {
                    type: 'object',
                    properties: {
                        self: { type: 'object' },
                        update: { type: 'object' },
                        delete: { type: 'object' },
                        materia: { type: 'object' },
                        prova: { type: 'object' },
                        finalizar: { type: 'object' }
                    }
                }
            }
        }
    }
    #swagger.responses[404] = {
        description: 'Sess√£o n√£o encontrada',
        schema: { $ref: '#/components/schemas/Error' }
    }
    */
    await sessaoController.getById(req, res);
});

// Criar uma nova sess√£o de estudo
router.post('/', async (req, res) => {
    /*
    #swagger.tags = ['Sess√µes de Estudo']
    #swagger.summary = 'Criar nova sess√£o de estudo'
    #swagger.description = 'Cria uma nova sess√£o de estudo no sistema com links HATEOAS. ‚ö†Ô∏è ATEN√á√ÉO: O materiaId deve ser de uma mat√©ria existente!'
    #swagger.requestBody = {
        required: true,
        content: {
            "application/json": {
                schema: {
                    type: 'object',
                    required: ['materiaId', 'conteudo', 'topicos', 'tempoInicio'],
                    properties: {
                        materiaId: { 
                            type: 'string', 
                            format: 'uuid',
                            example: '123e4567-e89b-12d3-a456-426614174000',
                            description: 'üîó ID da mat√©ria (deve existir no sistema)'
                        },
                        provaId: { 
                            type: 'string', 
                            format: 'uuid',
                            example: '123e4567-e89b-12d3-a456-426614174001',
                            description: 'üîó ID da prova (opcional, se for estudo para prova espec√≠fica)'
                        },
                        conteudo: { 
                            type: 'string', 
                            example: 'Estudando √°lgebra linear para o vestibular',
                            description: 'Descri√ß√£o do conte√∫do estudado'
                        },
                        topicos: { 
                            type: 'array',
                            items: { type: 'string' },
                            example: ['Matrizes', 'Determinantes', 'Sistemas lineares'],
                            description: 'Lista de t√≥picos estudados'
                        },
                        tempoInicio: { 
                            type: 'string', 
                            format: 'date-time',
                            example: '2024-12-25T14:00:00Z',
                            description: 'Hor√°rio de in√≠cio da sess√£o (ISO 8601)'
                        }
                    }
                }
            }
        }
    }
    #swagger.responses[201] = {
        description: 'Sess√£o criada com sucesso',
        schema: { 
            type: 'object',
            properties: {
                data: { $ref: '#/components/schemas/SessaoEstudo' },
                _links: {
                    type: 'object',
                    properties: {
                        self: { type: 'object' },
                        update: { type: 'object' },
                        delete: { type: 'object' },
                        materia: { type: 'object' },
                        finalizar: { type: 'object' }
                    }
                }
            }
        }
    }
    #swagger.responses[400] = {
        description: 'Dados inv√°lidos',
        schema: { $ref: '#/components/schemas/Error' }
    }
    */
    await sessaoController.create(req, res);
});

// Atualizar uma sess√£o de estudo
router.put('/:id', async (req, res) => {
    /*
    #swagger.tags = ['Sess√µes de Estudo']
    #swagger.summary = 'Atualizar sess√£o de estudo'
    #swagger.description = 'Atualiza os dados de uma sess√£o de estudo existente retornando links HATEOAS'
    #swagger.parameters['id'] = {
        in: 'path',
        description: 'ID da sess√£o de estudo',
        required: true,
        type: 'string',
        format: 'uuid'
    }
    #swagger.requestBody = {
        required: true,
        content: {
            "application/json": {
                schema: {
                    type: 'object',
                    properties: {
                        conteudo: { 
                            type: 'string', 
                            example: 'Sess√£o de revis√£o de f√≠sica qu√¢ntica',
                            description: 'Descri√ß√£o do conte√∫do'
                        },
                        topicos: { 
                            type: 'array',
                            items: { type: 'string' },
                            example: ['Efeito fotoel√©trico', 'Princ√≠pio da incerteza'],
                            description: 'T√≥picos estudados'
                        }
                    }
                }
            }
        }
    }
    #swagger.responses[200] = {
        description: 'Sess√£o atualizada com sucesso',
        schema: { 
            type: 'object',
            properties: {
                data: { $ref: '#/components/schemas/SessaoEstudo' },
                _links: { type: 'object' }
            }
        }
    }
    #swagger.responses[400] = {
        description: 'Dados inv√°lidos',
        schema: { $ref: '#/components/schemas/Error' }
    }
    #swagger.responses[404] = {
        description: 'Sess√£o n√£o encontrada',
        schema: { $ref: '#/components/schemas/Error' }
    }
    */
    await sessaoController.update(req, res);
});

// Deletar uma sess√£o de estudo
router.delete('/:id', async (req, res) => {
    /*
    #swagger.tags = ['Sess√µes de Estudo']
    #swagger.summary = 'Deletar sess√£o de estudo'
    #swagger.description = 'Remove uma sess√£o de estudo do sistema'
    #swagger.parameters['id'] = {
        in: 'path',
        description: 'ID da sess√£o de estudo',
        required: true,
        type: 'string',
        format: 'uuid'
    }
    #swagger.responses[204] = {
        description: 'Sess√£o deletada com sucesso'
    }
    #swagger.responses[404] = {
        description: 'Sess√£o n√£o encontrada',
        schema: { $ref: '#/components/schemas/Error' }
    }
    #swagger.responses[500] = {
        description: 'Erro interno do servidor',
        schema: { $ref: '#/components/schemas/Error' }
    }
    */
    await sessaoController.delete(req, res);
});

// Finalizar uma sess√£o de estudo
router.post('/:id/finalizar', async (req, res) => {
    /*
    #swagger.tags = ['Sess√µes de Estudo']
    #swagger.summary = 'Finalizar sess√£o de estudo'
    #swagger.description = 'Finaliza uma sess√£o de estudo em andamento, definindo o tempo de fim e retornando links HATEOAS'
    #swagger.parameters['id'] = {
        in: 'path',
        description: 'ID da sess√£o de estudo',
        required: true,
        type: 'string',
        format: 'uuid'
    }
    #swagger.responses[200] = {
        description: 'Sess√£o finalizada com sucesso',
        schema: { 
            type: 'object',
            properties: {
                data: { $ref: '#/components/schemas/SessaoEstudo' },
                _links: {
                    type: 'object',
                    properties: {
                        self: { type: 'object' },
                        update: { type: 'object' },
                        delete: { type: 'object' },
                        materia: { type: 'object' }
                    }
                }
            }
        }
    }
    #swagger.responses[400] = {
        description: 'Sess√£o j√° foi finalizada',
        schema: { 
            type: 'object',
            properties: {
                error: { 
                    type: 'string',
                    example: 'Sess√£o j√° foi finalizada'
                }
            }
        }
    }
    #swagger.responses[404] = {
        description: 'Sess√£o n√£o encontrada',
        schema: { $ref: '#/components/schemas/Error' }
    }
    #swagger.responses[500] = {
        description: 'Erro interno do servidor',
        schema: { $ref: '#/components/schemas/Error' }
    }
    */
    await sessaoController.finalizar(req, res);
});

export default router; 