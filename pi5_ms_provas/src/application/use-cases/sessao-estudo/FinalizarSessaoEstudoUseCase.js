import { logger } from '../../utils/logger.js';
import rabbitMQService from '../../../infrastructure/messaging/RabbitMQService.js';

export class FinalizarSessaoEstudoUseCase {
    constructor(sessaoEstudoRepository) {
        this.sessaoEstudoRepository = sessaoEstudoRepository;
    }

    async execute(sessaoId, dadosFinalizacao = {}, userId) {
        try {
            logger.info('Finalizando sess√£o de estudo', { sessaoId, dadosFinalizacao, userId });

            // Buscar sess√£o atual
            const sessao = await this.sessaoEstudoRepository.findById(sessaoId);
            if (!sessao) {
                throw new Error('Sess√£o n√£o encontrada');
            }

            // Verificar se a sess√£o pertence ao usu√°rio
            if (sessao.userId !== userId) {
                throw new Error('Sess√£o n√£o encontrada');
            }

            // Verificar se a sess√£o j√° foi finalizada
            if (sessao.finalizada) {
                throw new Error('Sess√£o j√° foi finalizada');
            }

            // Atualizar dados de finaliza√ß√£o
            const sessaoAtualizada = await this.sessaoEstudoRepository.update(sessaoId, {
                tempoFim: new Date(),
                finalizada: true,
                questoesAcertadas: dadosFinalizacao.questoesAcertadas || 0,
                totalQuestoes: dadosFinalizacao.totalQuestoes || 0,
                ...dadosFinalizacao
            });

            logger.info('Sess√£o finalizada com sucesso', { sessaoId, userId });

            // üöÄ PUBLICAR EVENTO DE SESS√ÉO FINALIZADA
            try {
                await rabbitMQService.publishSessaoFinalizada(sessaoAtualizada);
                logger.info('üì§ Evento de sess√£o finalizada publicado', { sessaoId, userId });
            } catch (eventError) {
                logger.error('‚ùå Erro ao publicar evento de sess√£o finalizada', { 
                    sessaoId,
                    userId,
                    error: eventError.message 
                });
                // N√£o falhar a finaliza√ß√£o por erro de evento
            }

            return sessaoAtualizada;
        } catch (error) {
            logger.error('Erro ao finalizar sess√£o de estudo', { 
                sessaoId, 
                userId,
                error: error.message 
            });
            throw error;
        }
    }
} 